basePath: /api/v1
definitions:
  controllers.ResponseJson:
    properties:
      message:
        example: Success
        type: string
    type: object
  controllers.SaveTask:
    properties:
      description:
        type: string
      title:
        type: string
    required:
    - title
    type: object
  controllers.SetStatus:
    properties:
      isCompleted:
        type: boolean
    required:
    - isCompleted
    type: object
  controllers.User:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
host: localhost:8080
info:
  contact: {}
  description: Todo Web API with JWT Auth
  title: Todo Web API
  version: "1.0"
paths:
  /CreateList/{id}:
    post:
      consumes:
      - application/json
      description: Sign-In with user credentials, for generated access token
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/controllers.ResponseJson'
      security:
      - BearerAuth: []
      summary: Create List
  /CreateTask/{listid}:
    post:
      consumes:
      - application/json
      description: Sign-In with user credentials, for generated access token
      parameters:
      - description: List ID
        in: path
        name: listid
        required: true
        type: integer
      - description: Add Task
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/controllers.SaveTask'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/controllers.ResponseJson'
      security:
      - BearerAuth: []
      summary: Create Task
  /DeleteList/{id}:
    delete:
      consumes:
      - application/json
      description: Sign-In with user credentials, for generated access token
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/controllers.ResponseJson'
      security:
      - BearerAuth: []
      summary: Delete List
  /DeleteTask/{id}:
    delete:
      consumes:
      - application/json
      description: Sign-In with user credentials, for generated access token
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/controllers.ResponseJson'
      security:
      - BearerAuth: []
      summary: Delete Task
  /GetList/{userid}:
    get:
      consumes:
      - application/json
      description: Sign-In with user credentials, for generated access token
      parameters:
      - description: User ID
        in: path
        name: userid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/controllers.ResponseJson'
      summary: Get List
  /GetUser/{id}:
    get:
      consumes:
      - application/json
      description: Fetch User Account
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/controllers.ResponseJson'
      summary: GetUserById
  /Home:
    get:
      consumes:
      - application/json
      description: Sign-In with user credentials, for generated access token
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/controllers.ResponseJson'
      summary: Home
  /Login:
    post:
      consumes:
      - application/json
      description: Sign-In with user credentials, for generated access token
      parameters:
      - description: Login Request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/controllers.User'
      produces:
      - application/json
      responses:
        "200":
          description: Successful
          schema:
            $ref: '#/definitions/controllers.ResponseJson'
      summary: Login
  /Logout:
    post:
      consumes:
      - application/json
      description: Logout User Account
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/controllers.ResponseJson'
      security:
      - BearerAuth: []
      summary: Logout
  /Register:
    post:
      consumes:
      - application/json
      description: Create User Account
      parameters:
      - description: Login Request
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/controllers.User'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/controllers.ResponseJson'
      summary: Register
  /TaskCompleted/{id}:
    put:
      consumes:
      - application/json
      description: Sign-In with user credentials, for generated access token
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Change Status
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/controllers.SetStatus'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/controllers.ResponseJson'
      security:
      - BearerAuth: []
      - BearerAuth: []
      summary: Change Status Task
  /UpdateTask/{id}:
    put:
      consumes:
      - application/json
      description: Sign-In with user credentials, for generated access token
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update Task
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/controllers.SaveTask'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/controllers.ResponseJson'
      security:
      - BearerAuth: []
      summary: Update Task
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
